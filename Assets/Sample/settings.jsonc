{
  // This is a sample config file for my DockerIRL project.

  // U can edit this config file with any editor u want and then reload config
  // in-game, sorry, i mean in-app using a keybind ("R" by default).

  // DockerIRL will only read from this file, it never update or remove this
  // file, so u can leave comments here.

  // Why there is no config menu inside DockerIRL? Well, if u ever heard about
  // Docker, im sure u will know how to edit a basuc .json file.

  "general": {
    // How far away from "useable" u have to stand for "it" to be accessable,
    // in meters.
    "interactRange": 8.0,

    // Human movement speed, in m/s.
    "characterMoveSpeed": 4.0,

    // Human sprint speed, in m/s
    "characterSprintSpeed": 6.0,

    // If u make "characterMoveSpeed" > "characterSprintSpeed", u can change
    // "sprint" behaviour to "slow down" behaviour.

    // How much time between querying docker state, in seconds. 0 to disable.
    "dockerStateQueryIntervalSeconds": 10,

    // Camera moves very slightly when idle. Similar to irl when u breathe.
    "breathing": true,

    // Auto-save interval, in seconds. 0 to disable
    "autoSaveIntervalSeconds": 60,

    // Save on close. Do I have to explain?
    "saveOnClose": true,

    // Where state will be saved on ur computer when "save" action or auto-save
    // is triggered.
    // NOTE: Usually u want "saveStateFilePath" and "loadStateFilePath" to
    // point to the same file, unless u do debugging.
    "saveStateFilePath": "state.json",

    // Where to load state from when on startup or "load" action is triggered.
    "loadStateFilePath": "state.json",

    // Load keybinds from file using Unity's InputSystem Json binding override
    // format. Currently it doesnt allow to bind multiple bindings to an
    // action, or bind composites (like Ctrl+C), but hey, at least its
    // something... (TODO: Prepare a better rebinding system)
    "loadKeybindsFilePath": "keybinds.json",

    // Whether to spawn a container irl when new container appears in Docker.
    "automaticallyCreateDockerIrlContainerForNewDockerContainer": true,

    // Configuration for all new containers that are spawned when a container
    // appears in Docker.
    "newContainerConfiguration": {
      "persist": false,

      // "name", "id",
      "matchDockerContainerBy": "name",

      // This text will be rendered as tooltip when u look at the container.
      // If empty, tooltip will not appear.
      // U can use some rich text tags, like <b>Bold text!</b>.
      // More about TextMeshPro's rich text: http://digitalnativestudios.com/textmeshpro/docs/rich-text
      "highlightTextTemplate": "Container\n<size=80%>{{containerId}}\n</size>\n{{dockerName}}\n<size=80%>FROM {{dockerImageName}}\n</size>\n{{actionBinding_moveObject}} - Move",

      "terminals": [
        {
          "position": {
            "x": 0.55,
            "y": 1.465,
            "z": 3.2
          },

          "rotation": {
            "x": 0,
            "y": 170.0,
            "z": 0
          },

          "console": {
            // "command", "args" and "cwd" are templates and are evaluated when
            // a new container appears

            "command": "docker.exe",
            "args": [ "exec", "-it", "{{matchId}}", "/bin/sh" ],
            "cwd": ".",
            "env": {},
            "columns": 82,
            "rows": 32
          },

          // Only useful for debugging
          "skipProcessStart": false,

          // Monitor size, in meters
          "monitorSize": {
            "x": 1.0,
            "y": 0.75
          },

          // Canvas size in pixels
          "canvasSize": {
            "x": 640.0,
            "y": 480.0
          },

          // Canvas scale
          "canvasScale": {
            "x": 0.0015,
            "y": 0.0015
          },

          // Font size
          "fontSize": 12.0,

          // More on cursor shapes:
          // https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences#cursor-shape

          // "Bar" | "Block" | "Underline" | null
          "overrideCursorShape": null,

          // Rectangle shape when cursor is in Bar mode
          "cursorBarShapeRect": {
            "x": 0.0,
            "y": 0.0,
            "width": 1.0,
            "height": 14.7
          },

          // Rectangle shape when cursor is in Block mode
          "cursorBlockShapeRect": {
            "x": 0.0,
            "y": 0.0,
            "width": 7.4,
            "height": 14.7
          },

          // Rectangle shape when cursor is in Underline mode
          "cursorUnderlineShapeRect": {
            "x": 0.0,
            "y": -13.7,
            "width": 7.4,
            "height": 1.0
          },

          // Character (grid cell) size. Used to calculate cursor position when
          // rendering. Depends on font size.
          "cursorCharacterSize": {
            "x": 7.4,
            "y": -14.75
          },

          // This text will be rendered as tooltip when u look at the monitor.
          // See "newContainerConfiguration.highlightTextTemplate" for more
          // info.
          // If empty, tooltip will not appear
          "highlightTextTemplate": "Terminal \"{{id}}\"\n{{command}}\n{{isRunningText}}\nCurrent PID: {{currentPid}}\nExit code: {{lastExitCode}}\n[E] - Use\n",

          // This will be shown in terminal when it is just created.
          "defaultIdleTextTemplate": "\n\n\n\n\n\n\n\n\n\t\t<color=#999999>Terminal <color=#FFFFFF>\"{{id}}\"\n\n\n\t\t<color=#999999>Command:\n\t\t<color=#FFFFFF>{{commandWithArgs}}\n\n\n\t\t<color=#FFFFFF>{{actionBinding_interact}}<color=#999999> - Use"

          // TODO: Sound

          // TODO: Colors, fonts, etc.
        },

        {
          "console": {
            "command": "docker.exe",
            "args": [ "logs", "--follow", "{{matchId}}" ],
            "cwd": ".",
            "env": {},
            "columns": 82,
            "rows": 32
          },

          "position": {
            "x": -0.55,
            "y": 1.465,
            "z": 3.2
          },

          "rotation": {
            "x": 0,
            "y": 190.0,
            "z": 0
          },

          "defaultIdleTextTemplate": "\n\n\n\n\n\n\n\n\n\t\t<color=#999999>Terminal <color=#FFFFFF>\"{{id}}\"\n\n\n\t\t<color=#999999>Command:\n\t\t<color=#FFFFFF>{{commandWithArgs}}\n\n\n\t\t<color=#FFFFFF>{{actionBinding_interact}}<color=#999999> - Use"
        }
      ]
    },

    // Whether to kill terminal process when updating state. I recommend
    // turning this setting off, to prevent unnecessarily killing processes
    // and avoid accidental data loss.
    "removeRunningTerminals": false,

    // Whether to show debug acti... is the name not descriptive enough???
    "showDebugActions": false
  },

  "TODO:mouse": {
    "sensitivity": 1.0
  },

  "sound": {
    "steps": 1.0,
    "terminal": 1.0
  }
}
